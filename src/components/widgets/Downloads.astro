---
import { Icon } from 'astro-icon';

interface Download {
  text: string;
  hrefEU: string;
  hrefWW: string;
  md5: string;
  isComgingSoon: boolean;
}

export interface Props {
  title?: string;
  description?: string;
  downloads: Array<Download>;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  downloads = [],
} = Astro.props;
---

<section class="relative">
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    <div class="py-12 md:py-20">
      <div
        class="max-w-3xl mx-auto text-center p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600"
      >
        {
          title && (
            <h2
              class="text-4xl md:text-4xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
              set:html={title}
            />
          )
        }
        {subtitle && <p class="text-xl text-gray-600 dark:text-slate-400" set:html={subtitle} />}
        <div class="grid grid-cols-4 gap-4"><div class="mb-3 text-xl font-bold">ISO</div><div class="mb-3 text-xl font-bold">EU Mirror</div><div class="mb-3 text-xl font-bold">World Mirror</div><div class="mb-3 text-xl font-bold">Hash</div>
        {
        downloads &&
        downloads.map((download) => (
          <div>{download.text}</div><div>{download.isComgingSoon ? "Coming Soon" : (<a class="flex flex-row flex-auto justify-center" href={download.hrefEU} target="_blank">{<Icon name="tabler:download" class="w-5 h-5 mr-1 -ml-1.5" />}ISO</a>)}</div><div>{download.isComgingSoon ? "Coming Soon" : (<a class="flex flex-row flex-auto justify-center" href={download.hrefWW} target="_blank">{<Icon name="tabler:download" class="w-5 h-5 mr-1 -ml-1.5" />}ISO</a>)}</div><div>{download.isComgingSoon ? "Coming Soon" : (<a class="flex flex-row flex-auto justify-center" href={download.md5} target="_blank">{<Icon name="tabler:download" class="w-5 h-5 mr-1 -ml-1.5" />}MD5</a>)}</div>
          ))
        }
        </div>
      </div>
    </div>
  </div>
</section>
